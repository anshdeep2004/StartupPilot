generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  name        String
  email       String?  @unique
  role        String?
  password    String?  // optional for now
  projects    ProjectMember[]
  tasks       Task[]   @relation("Assignee")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Startup {
  id        String   @id @default(uuid())
  name      String
  description String?
  createdBy User?    @relation(fields: [createdById], references: [id])
  createdById String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id         String   @id @default(uuid())
  name       String
  startDate  DateTime?
  shortDesc  String?
  longDesc   String?
  createdBy  User?    @relation(fields: [createdById], references: [id])
  createdById String?
  members    ProjectMember[]
  tasks      Task[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ProjectMember {
  id        String  @id @default(uuid())
  project   Project @relation(fields: [projectId], references: [id])
  projectId String
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  role      String?
  createdAt DateTime @default(now())
}

model Task {
  id         String   @id @default(uuid())
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  String
  title      String
  description String?
  status     String   @default("todo")
  assignee   User?    @relation("Assignee", fields: [assigneeId], references: [id])
  assigneeId String?
  orderIndex Int?    
  dueDate    DateTime?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
